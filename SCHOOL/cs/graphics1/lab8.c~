#include <FPT.h>
#include <D3d_matrix.h>
#include <mytools.h>

int HEIGHT = 1000;
int WIDTH = 1000;
int n = 10;

/*void draw_poly(int f, int p) {
  int i;
  double xtemp[1000], ytemp[1000];
  for (i = 0; i < psize[f][p]; i++) {
    double xp = x[con[f][p][i]];
    double yp = y[con[f][p][i]];
    double zp = z[con[f][p][i]];
    xtemp[i] = WIDTH*(xp/zp)/tan(HA) + WIDTH/2;
    ytemp[i] = HEIGHT*(yp/zp)/tan(HA) + HEIGHT/2;
  }
  double inten = intensity(f,p);
  double rgb[3] = {inten,inten,inten};
  color(rgb,inten);
  G_rgb(rgb[0],rgb[1],rgb[2]);
  G_fill_polygon(xtemp,ytemp,psize[f][p]);
  G_rgb(0,0,0);
}

void draw_object(int f) {
  int i;
  for (i = 0; i < numpolys[f]; i++) {
    draw_poly(f,i);
  }
}*/

int main() {
  double p[2];
  double xs[500], ys[500], zs[500];
  double x[1000], y[1000], z[1000];
  double mat[4][4];
  double minv[4][4];
  int con[5000][50];
  int i, j;
  
  G_init_graphics(HEIGHT,WIDTH);
  G_rgb(0,0,0);
  G_line(500,0,500,HEIGHT);
  G_fill_rectangle(0,0,20,20);
  i = 0;
  G_wait_click(p);
  while (!(p[0]>0 && p[0]<20 && p[1]>0 && p[1]<20)) {
    xs[i] = p[0];
    ys[i] = p[1];
    zs[i] = 0;
    if (i > 0) {
      G_line(xs[i-1],ys[i-1],xs[i],ys[i]);
    }
    G_wait_click(p);
    i++;
  }
  int m = i;
  for (i = 0; i < n; i++) {
    D3d_make_identity(mat);
    D3d_make_identity(minv);
    D3d_translate(mat,minv,-WIDTH/2,0,0);
    D3d_rotate_x(mat,minv,2*M_PI/m);
    D3d_translate(mat,minv,WIDTH/2,0,0);
    D3d_mat_mult_points(xs,ys,zs,mat,xs,ys,zs,m);
    for (j = 0; j < m; j++) {
      int ind = i*m+j;
      x[ind] = xs[j];
      y[ind] = xs[j];
      z[ind] = xs[j];
    }
  }
  int ind = 0;
  for (i = 0; i < n; i++) {
    for (j = 0; j < m-1; j++) {
      con[ind][0] = i*m+j;
      con[ind][1] = i*m+j+1;
      con[ind][2] = (i+1)%n*m+j+1;
      con[ind][3] = (i+1)%n*m+j;
      ind++;
    }
  }
  for (i = 0; i < n*(m-1); i++) {
    for (j = 0; j < 4; j++) {
      printf("%d ",con[i][j]);
    }
    printf("\n");
  }
}
