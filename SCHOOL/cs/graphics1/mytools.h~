int det2(double m[2][2]);
int det3(double m[3][3]);
int det2in3(double m[3][3],int i, int j);
void add_vec(double *ret, double *v, double *u, int n);
void scale_vec(double *v, double*u, double s, int n);
void subtract_vec(double *ret, double *v, double *u, int n);
void normalize(double *v, int n);
void x_prod(double cross[3], double u[3], double v[3]);
double d_prod(double *u, double *v, int n);
double max(double * x, int n);
double min(double * x, int n);
void print_arr(double * x, int n);
void sort(double * x, int n);
void project1();
void my_fill_polygon(double * x, double * y, int n);
void my_polygon(double * x, double * y, int n);
void draw_star(double * p1, double * p2);
void scale(double * x, double * y, int n, int box);
void translate(double * x, double * y, int n, int x_center, int y_center);
double dist(double x1, double y1, double x2, double y2);
void rotate(double * x, double * y, int n, double delta);
void point_info();
void intersec(double * p, double * p0, double * p1, double * p2, double * p3);
int line_side(double * p, double * p0, double * p1);
void center(double * p, double * x, double * y, int n);
void copy_matrix(double * ret, double * in, int n);
